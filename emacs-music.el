(defvar music-player-command "mpv --no-audio-display --loop --save-position-on-quit ")
(defvar music-player-kill-command "killall mpv")

(defvar music-status 0)
(defvar music-last-command "")

(defun music-url(filename)
  (interactive "sWhat to play?: ")
  (setq music-status 1)
  (setq music-last-command (concat music-player-command filename))
  (call-process-shell-command music-last-command nil 0)
)
(defun music-file(filename)
  (interactive "fWhat to Play:")
  (music-url (replace-regexp-in-string " " "\\\\ " filename))
)
(defun music-dir(filename)
  (interactive "fWhat to Play:")
  (music-url (concat (replace-regexp-in-string " " "\\\\ " filename) "/*"))
)
(defun music-last()
  (interactive)
  (setq music-status 1)
  (call-process-shell-command music-last-command nil 0)
)
(defun nomusic()
  (interactive)
  (setq music-status 0)
  (call-process-shell-command music-player-kill-command nil 0)
)
(defun gimmeradio()
  (interactive)
  (music-url "https://gimme-stream.s3-us-west-1.amazonaws.com/128k/gimme1_aac_128.m3u8")
)
(defun ultraradio()
  (interactive)
  (music-url "http://ultra128.streamr.ru")
)
(defun triplemradio()
  (interactive)
  (music-url "rtmp://wzvic.scahw.com.au/live/3mmm_128.stream")
)
(defun music-toggle()
  (interactive)
  (if (> music-status 0)
    (nomusic)
    (music-last)
  )
)

(defun volume-up()
  (interactive)
  (shell-command "amixer -q sset Master 5%+")
)
(defun volume-down()
  (interactive)
  (shell-command "amixer -q sset Master 5%-")
)
(defun volume-set(num)
  (interactive "sVolume:")
  (shell-command (concat "amixer -q sset Master " num "%"))
)

(global-set-key (kbd "C-c +") 'volume-up)
(global-set-key (kbd "C-c -") 'volume-down)
(global-set-key (kbd "C-c !") 'music-toggle)

(provide 'emacs-music)
